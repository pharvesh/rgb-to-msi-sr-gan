# RGB to Multispectral Image Super-Resolution Configuration

# Model Architecture
model:
  img_height: 482
  img_width: 512
  input_channels: 3
  output_channels: 31
  base_unet_features: 64
  disc_features: 64
  bilinear_upsampling: true

# Training Parameters
training:
  batch_size: 8
  val_batch_size: 4
  num_epochs: 300
  patience: 40
  
  # Learning Rate
  initial_lr_g: 2.0e-5
  initial_lr_d: 2.0e-5
  lr_decay_start_ratio: 0.5  # Start decay at 50% of total epochs
  min_lr: 1.0e-7
  
  # GAN Stability
  grad_clip_norm: 1.0
  label_smooth_real: 0.9
  label_smooth_fake: 0.1
  d_update_freq: 3  # Update discriminator 3 times per generator update
  
  # Loss Weights
  lambda_l1: 100.0
  lambda_sam: 0.3
  lambda_adv: 0.1




# Data Configuration
data: 
  train_path: "/path/to/train/folder"       # replace with the data path
  val_path: "/path/to/validation/folder"
  rgb_subdir: "Train_RGB"
  spectral_subdir: "Train_Spectral"
  val_rgb_subdir: "Val_RGB"
  val_spectral_subdir: "Val_Spectral"
  rgb_extension: ".png"
  spectral_extension: ".mat"
  num_workers: 4
  pin_memory: true
  normalize_range: [-1, 1]   
  dataset_available: false  # Set true after adding the data path



# Model Checkpointing
checkpoint:
  save_dir: "checkpoints/"
  save_best_only: true
  monitor: "val_reconstruction_loss"
  mode: "min"
  filename: "rgb_to_multispectral_gan_best.pt"

# Logging and Monitoring
logging:
  log_dir: "logs/"
  log_level: "INFO"
  save_frequency: 10  # Save logs every N epochs
  tensorboard: true
  
# Evaluation
evaluation:
  metrics: ["psnr", "ssim", "sam", "mrae"]
  save_predictions: true
  visualization: true
  
# Hardware
hardware:
  device: "auto"  # "auto", "cuda", "cpu"
  mixed_precision: false  # Enable for faster training on compatible GPUs
  
# Reproducibility
seed: 1994
